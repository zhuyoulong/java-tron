group 'org.tron'
version '1.0.0'

apply plugin: 'java'
apply plugin: 'com.google.protobuf'
apply plugin: 'application'
apply plugin: 'checkstyle'

sourceCompatibility = 1.8
mainClassName = 'org.tron.example.Tron'

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.3'
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2"
    }
}
apply plugin: 'org.sonarqube'

subprojects{
    apply plugin: 'java'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    sourceSets {
        main {
            java.srcDir('src/main/java')
            resources.srcDir('src/main/resources')
        }
        test {
            java.srcDir('src/test/java')
            resources.srcDir('src/test/resources')
        }
    }
    sonarqube{
        properties{
            property "sonar.host.url", "http://localhost:9000/"
            property "sonar.jdbc.url", "jdbc:mysql://localhost:3306/sonar_local"
            property "sonar.jdbc.driverClassName", "com.mysql.jdbc.Driver"
            property "sonar.jdbc.username", "root"
            property "sonar.jdbc.password", "123456"
        }
    }
    task wrapper(type: Wrapper) {
        gradleVersion = '4.5.1'
    }
}

def versions = [
        checkstyle: '8.7',
]

configurations {
    checkstyleConfig

}

configurations.getByName('checkstyleConfig') {
    transitive = false
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.13.0'
    testCompile group: 'org.hamcrest', name: 'hamcrest-junit', version: '1.0.0.1'

    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.7.25'
    compile group: 'log4j', name: 'log4j', version: '1.2.17'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    compile "org.projectlombok:lombok:1.16.18"

    compile group: 'commons-codec', name: 'commons-codec', version: '1.11'

    compile "com.madgag.spongycastle:core:1.53.0.0"
    compile "com.madgag.spongycastle:prov:1.53.0.0"

    compile group: 'com.google.guava', name: 'guava', version: '18.0'

    compile group: 'com.google.protobuf', name: 'protobuf-java', version: '3.4.0'

    compile "org.iq80.leveldb:leveldb:0.7"

    compile group: 'org.fusesource.leveldbjni', name: 'leveldbjni-all',
            version: '1.8'

    compile "org.apache.commons:commons-collections4:4.0"

    compile group: 'com.typesafe', name: 'config', version: '1.3.2'

    compile "com.google.code.findbugs:jsr305:3.0.0"

    compile "com.cedarsoftware:java-util:1.8.0"

    compile "org.apache.commons:commons-lang3:3.4"

    compile(group: 'org.apache.kafka', name: 'kafka_2.12', version: '0.11.0.2') {
        exclude module: 'slf4j-log4j12'
    }
    compile group: 'org.springframework', name: 'spring-context', version: '4.2.0.RELEASE'

    compile(group: 'org.apache.kafka', name: 'kafka_2.12', version: '0.11.0.2') {
        exclude module: 'slf4j-log4j12'
    }

    compile "org.apache.commons:commons-collections4:4.0"

    compile group: 'com.beust', name: 'jcommander', version: '1.72'

    compile group: 'junit', name: 'junit', version: '4.8.1'

    compile group: 'io.atomix.copycat', name: 'copycat-server', version: '1.1.4'
    compile group: 'io.atomix.copycat', name: 'copycat-client', version: '1.1.4'
    compile group: 'io.atomix.catalyst', name: 'catalyst-netty', version: '1.1.1'
    compile group: 'net.jcip', name: 'jcip-annotations', version: '1.0'

    compile group: 'org.fusesource.jansi', name: 'jansi', version: '1.16'
    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.44'

    compile group: 'com.google.inject', name: 'guice', version: '4.1.0'

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.5'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.8.5'
    compile group: 'org.apache.commons', name: 'commons-math', version: '2.2'

    compile group: 'io.dropwizard.metrics', name: 'metrics-core', version: '3.1.2'
    compile group: 'org.projectlombok', name: 'lombok', version: '1.16.20'

    checkstyleConfig "com.puppycrawl.tools:checkstyle:${versions.checkstyle}"

}

task lint(type: Checkstyle) {
    // Cleaning the old log because of the creation of the new ones (not sure if totaly needed)
    delete fileTree(dir: "${project.rootDir}/app/build/reports")
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    // empty classpath
    classpath = files()
    //Failing the build
    ignoreFailures = false
}

checkstyle {
    toolVersion = "${versions.checkstyle}"
    config = resources.text.fromArchiveEntry(configurations.checkstyleConfig, 'google_checks.xml')
}



tasks.matching { it instanceof Test }.all {
    testLogging.events = ["failed", "passed", "skipped"]
}

if (project.hasProperty("mainClass")) {
    mainClassName = mainClass
}

sourceSets {
    src {
        main {
            proto {
                srcDir 'src/main/proto'
            }
        }
    }
}

protobuf.protoc {
    artifact = 'com.google.protobuf:protoc:3.4.0'
}

protobuf {
    generatedFilesBaseDir = "$projectDir/src"

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {}
            }
        }
    }
}

run {
    if (project.hasProperty('server')) {
        standardInput = System.in
        args = ['--type', 'server']
    }
}
